name: Website Deployment

env:
  DEPLOY_PACKAGE_NAME_FILE: "production.zip"
  DEPLOY_PACKAGE_NAME: "${{ github.sha }}"

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone https://github.com/DaniilsFirgers/personal_website.git
        uses: actions/checkout@v2

      - name: Install And Build Web app
        run: yarn install && yarn build

      - name: Create zip deployment package
        run: zip -r ${{ env.DEPLOY_PACKAGE_NAME_FILE }} ./dist/ -x *.git*

      - name: Copy zip to ligthsail server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.PW_LIGHTSAIL_IP }}
          username: ${{ secrets.PW_LIGHTSAIL_USERNAME }}
          key: ${{ secrets.SSH_PW_PRIVATE_KEY }}
          password: ""
          passphrase: ""
          port: 22
          source: ${{ env.DEPLOY_PACKAGE_NAME_FILE }}
          target: "/home/${{ secrets.PW_LIGHTSAIL_USERNAME }}"

      - name: Connect to AWS Lightsail and extract zip
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.PW_LIGHTSAIL_IP }}
          username: ${{ secrets.PW_LIGHTSAIL_USERNAME }}
          key: ${{ secrets.SSH_PW_PRIVATE_KEY }}
          password: ""
          passphrase: ""
          port: 22
          script: |
            unzip -q -o /home/${{ secrets.PW_LIGHTSAIL_USERNAME  }}/${{ env.DEPLOY_PACKAGE_NAME_FILE }} -d .

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.sha }}
          release_name: Release ${{ github.sha }}
          body: Release for commit ${{ github.sha }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}Resource not accessible by integration
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.DEPLOY_PACKAGE_NAME_FILE }}
          asset_name: production.zip
          asset_content_type: application/zip
